* Chapter 3
*** Sample app setup
    - Trying to specify the rails version gave me the following error;
      so I didn't specify a version, and everything seemed to work.
      ~/repos $ rails _4.2.2_ new sample
       /home/kwaku/.rvm/rubies/ruby-2.2.1/lib/ruby/site_ruby/2.2.0/rubygems/dependency.rb:315:in `to_specs': Could not find 'railties' (= 4.2.2) - did find: [railties-4.2.4,railties-4.2.3,railties-4.2.1,railties-4.1.4] (Gem::LoadError)
       Checked in 'GEM_PATH=/home/kwaku/.rvm/gems/ruby-2.2.1:/home/kwaku/.rvm/gems/ruby-2.2.1@global', execute `gem env` for more information
	from /home/kwaku/.rvm/rubies/ruby-2.2.1/lib/ruby/site_ruby/2.2.0/rubygems/dependency.rb:324:in `to_spec'
	from /home/kwaku/.rvm/rubies/ruby-2.2.1/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_gem.rb:64:in `gem'
	from /home/kwaku/.rvm/gems/ruby-2.2.1/bin/rails:22:in `<main>'
	from /home/kwaku/.rvm/gems/ruby-2.2.1/bin/ruby_executable_hooks:15:in `eval'
	from /home/kwaku/.rvm/gems/ruby-2.2.1/bin/ruby_executable_hooks:15:in `<main>'
    - The Gemfile retained the default version numbers generated by Rails.
      The idea is if there's a version snag later, fix it and report it.
*** Static Pages    
***** Generate controller                                             :c:
rails generate controller StaticPages home help
      create  app/controllers/static_pages_controller.rb
       route  get 'static_pages/help'
       route  get 'static_pages/home'
      invoke  erb
      create    app/views/static_pages
      create    app/views/static_pages/home.html.erb
      create    app/views/static_pages/help.html.erb
      invoke  test_unit
      create    test/controllers/static_pages_controller_test.rb
      invoke  helper
      create    app/helpers/static_pages_helper.rb
      invoke    test_unit
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/static_pages.coffee
      invoke    scss
      create      app/assets/stylesheets/static_pages.scss
***** controller name as CamelCase                               :c:ruby:
 creation of a controller file written in snake case
 Ruby uses CamelCase for class names
***** Undoing things                                              :rails:
rails generate --- rails destroy
rake db:migrate --- rake db: rollback
rake db:migrate VERSION=0
***** Custom static pages
*** Getting started wit Testing                                      :test:
***** Benefits of Testing
1. Protect against regressions: functioning code breaking
2. Allow for code re-factoring (change form without effecting function.)
3. Act as a client for the application code.
***** When to Test:
******* When test is simple compared to application code it tests, write the test first
******* When desired behavior isn't very clear, write application code first
******* Security model: err on side of writing tests.
******* Bug: when found, write test to reproduce it and protect against regressions, then fix it.
******* Careful about tests for code (such as HTML structure) likely to change in the future.
******* Write tests before re-factoring code, focusing on testing error-prone code that's especially likely to break.
******* Generally: write controller and model tests first, and integration tests (tests for functionality across model, views, and controllers) second.
*** Our first test
